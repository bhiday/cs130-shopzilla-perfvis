// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.shopzilla.perfvis.data;

import com.shopzilla.perfvis.data.CompositePerfDataDataOnDemand;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CompositePerfDataIntegrationTest_Roo_IntegrationTest {
    
    declare @type: CompositePerfDataIntegrationTest: @RunWith(SpringJUnit4ClassRunner.class);
    
    declare @type: CompositePerfDataIntegrationTest: @ContextConfiguration(locations = "classpath:/META-INF/spring/applicationContext.xml");
    
    declare @type: CompositePerfDataIntegrationTest: @Transactional;
    
    @Autowired
    private CompositePerfDataDataOnDemand CompositePerfDataIntegrationTest.dod;
    
    @Test
    public void CompositePerfDataIntegrationTest.testCountCompositePerfDatas() {
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", dod.getRandomCompositePerfData());
        long count = com.shopzilla.perfvis.data.CompositePerfData.countCompositePerfDatas();
        org.junit.Assert.assertTrue("Counter for 'CompositePerfData' incorrectly reported there were no entries", count > 0);
    }
    
    @Test
    public void CompositePerfDataIntegrationTest.testFindCompositePerfData() {
        com.shopzilla.perfvis.data.CompositePerfData obj = dod.getRandomCompositePerfData();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", obj);
        java.lang.Long id = obj.getId();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to provide an identifier", id);
        obj = com.shopzilla.perfvis.data.CompositePerfData.findCompositePerfData(id);
        org.junit.Assert.assertNotNull("Find method for 'CompositePerfData' illegally returned null for id '" + id + "'", obj);
        org.junit.Assert.assertEquals("Find method for 'CompositePerfData' returned the incorrect identifier", id, obj.getId());
    }
    
    @Test
    public void CompositePerfDataIntegrationTest.testFindCompositePerfDataEntries() {
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", dod.getRandomCompositePerfData());
        long count = com.shopzilla.perfvis.data.CompositePerfData.countCompositePerfDatas();
        if (count > 20) count = 20;
        java.util.List<com.shopzilla.perfvis.data.CompositePerfData> result = com.shopzilla.perfvis.data.CompositePerfData.findCompositePerfDataEntries(0, (int) count);
        org.junit.Assert.assertNotNull("Find entries method for 'CompositePerfData' illegally returned null", result);
        org.junit.Assert.assertEquals("Find entries method for 'CompositePerfData' returned an incorrect number of entries", count, result.size());
    }
    
    @Test
    public void CompositePerfDataIntegrationTest.testFlush() {
        com.shopzilla.perfvis.data.CompositePerfData obj = dod.getRandomCompositePerfData();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", obj);
        java.lang.Long id = obj.getId();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to provide an identifier", id);
        obj = com.shopzilla.perfvis.data.CompositePerfData.findCompositePerfData(id);
        org.junit.Assert.assertNotNull("Find method for 'CompositePerfData' illegally returned null for id '" + id + "'", obj);
        boolean modified =  dod.modifyCompositePerfData(obj);
        java.lang.Integer currentVersion = obj.getVersion();
        obj.flush();
        org.junit.Assert.assertTrue("Version for 'CompositePerfData' failed to increment on flush directive", (currentVersion != null && obj.getVersion() > currentVersion) || !modified);
    }
    
    @Test
    public void CompositePerfDataIntegrationTest.testMerge() {
        com.shopzilla.perfvis.data.CompositePerfData obj = dod.getRandomCompositePerfData();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", obj);
        java.lang.Long id = obj.getId();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to provide an identifier", id);
        obj = com.shopzilla.perfvis.data.CompositePerfData.findCompositePerfData(id);
        boolean modified =  dod.modifyCompositePerfData(obj);
        java.lang.Integer currentVersion = obj.getVersion();
        com.shopzilla.perfvis.data.CompositePerfData merged = (com.shopzilla.perfvis.data.CompositePerfData) obj.merge();
        obj.flush();
        org.junit.Assert.assertEquals("Identifier of merged object not the same as identifier of original object", merged.getId(), id);
        org.junit.Assert.assertTrue("Version for 'CompositePerfData' failed to increment on merge and flush directive", (currentVersion != null && obj.getVersion() > currentVersion) || !modified);
    }
    
    @Test
    public void CompositePerfDataIntegrationTest.testPersist() {
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", dod.getRandomCompositePerfData());
        com.shopzilla.perfvis.data.CompositePerfData obj = dod.getNewTransientCompositePerfData(Integer.MAX_VALUE);
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to provide a new transient entity", obj);
        org.junit.Assert.assertNull("Expected 'CompositePerfData' identifier to be null", obj.getId());
        obj.persist();
        obj.flush();
        org.junit.Assert.assertNotNull("Expected 'CompositePerfData' identifier to no longer be null", obj.getId());
    }
    
    @Test
    public void CompositePerfDataIntegrationTest.testRemove() {
        com.shopzilla.perfvis.data.CompositePerfData obj = dod.getRandomCompositePerfData();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to initialize correctly", obj);
        java.lang.Long id = obj.getId();
        org.junit.Assert.assertNotNull("Data on demand for 'CompositePerfData' failed to provide an identifier", id);
        obj = com.shopzilla.perfvis.data.CompositePerfData.findCompositePerfData(id);
        obj.remove();
        obj.flush();
        org.junit.Assert.assertNull("Failed to remove 'CompositePerfData' with identifier '" + id + "'", com.shopzilla.perfvis.data.CompositePerfData.findCompositePerfData(id));
    }
    
}
